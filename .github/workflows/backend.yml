name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone external repository
        run: |
          git clone https://gitlab.com/cloud-devops-assignments/spring-boot-react-example.git
          cd spring-boot-react-example
          echo "Clonedd public repo successfully!"
          mvn wrapper:wrapper
      - name: Cloneeeeed external repository
        run: |
          mvn wrapper:wrapper        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
         # Give execute permissions to Maven Wrapper
      - name: Make mvnw executable
        run: chmod +x ./mvnw
      
      - name: Build with Maven
        run: |
          cd spring-boot-react-example
          ./mvnw clean package

      - name: Run unit tests
        run: |
          cd spring-boot-react-example
          ./mvnw test

  dockerize:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Clone external repository
        run: git clone https://gitlab.com/cloud-devops-assignments/spring-boot-react-example.git

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_REGISTRY}}/spring-backend:${{ github.sha }} spring-boot-react-example

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD}}" | docker login -u "${{ secrets.DOCKER_USERNAME}}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_REGISTRY}}/spring-backend:${{ github.sha }}

  deploy:
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment-backend.yaml
